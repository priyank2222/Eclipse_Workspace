package StacksUsingArray;

public class Stack {
  
  private final static int DEFAULT_SIZE = 5;
  private int top;
  private int[] items;
  private int size;
  
  public Stack(int size)
  {
    items = new int[size];
    top = -1;
    this.size = size;
  }
  
  public Stack()
  {
    items = new int[DEFAULT_SIZE];
    top = -1;
    this.size = DEFAULT_SIZE;
  }
  
  public void push(int item) throws FullStackException
  {
    if(top == this.size - 1)
      throw new FullStackException();
    top++;
    items[top] = item;
  }
  
  public int pop() throws EmptyStackException
  {
    if(top == -1)
      throw new EmptyStackException();
    int item = items[top];
    top--;
    return item;
  }

  public static void main(String[] args)  {
    
    Stack stack = new Stack(5);
//    try
//    {
//      stack.push(1);
//      stack.push(2);
//      stack.push(3);
//      stack.push(4);
//      stack.push(5);
//      
////      System.out.println(stack.pop());
////      System.out.println(stack.pop());
////      System.out.println(stack.pop());
////      System.out.println(stack.pop());
////      System.out.println(stack.pop());
//      
//      //stack.pop();
//    }
    catch(FullStackException e)
    {
      System.out.println("Stack is full!!");
    }
    catch(EmptyStackException e)
    {
      System.out.println("Stack is Empty");
    }
  }

}
